# ============================
# üåê PeakStat - Config Projet
# ============================

üéØ OBJECTIF
Application web de statistiques sportives orient√©e football (extension future NBA/NHL), avec affichage des performances des joueurs/√©quipes, filtres dynamiques, comparateurs, tendances, graphiques, et √† terme un acc√®s public par abonnement.

‚öôÔ∏è STACK TECHNIQUE
- Backend : Flask (Python)
- Frontend : HTML, CSS, JavaScript (vanilla ou jQuery)
- Graphiques : Chart.js
- Base de donn√©es : SQLite (dev) ‚Üí PostgreSQL (prod)
- API utilis√©e : API-Sport.io (Plan Pro), plus tard peut etre un passage a sportmonks
- UI/UX : sobre, minimaliste, glassmorphism l√©ger, data-driven

üóÇÔ∏è GITHUB
Repo principal : https://github.com/Bigwiz64/stat-analyzer

Structure :
- /app/
   - routes.py ‚Üí endpoints Flask
   - data_access.py ‚Üí fonctions de requ√™te et calculs
   - import_fixtures_2024.py ‚Üí script d‚Äôimport principal
   - /templates/
      - match_preview.html ‚Üí page d‚Äôanalyse des matchs
      - match_detail.html ‚Üí d√©tails stats match
   - /static/
      - chart_config.js ‚Üí configuration des graphiques
      - player_panel.js ‚Üí panneau stats joueurs
      -style.css ‚Üí design du site
- config_project.txt (ce fichier)
- requirements.txt
- data_pipeline
    - /fetch/
      - import_fixtures_2024 ‚Üí script principale d'import

üìå BASE DE DONN√âES
Table : teams
   - id (INTEGER)
   - name (TEXT)
   - country (TEXT)
   - logo (TEXT)
   - league_id (INTEGER)
   - season (INTEGER)

üî∏ Table : fixtures
   - id (INTEGER)
   - date (TEXT)
   - league_id (INTEGER)
   - home_team_id (INTEGER)
   - away_team_id (INTEGER)
   - home_goals (INTEGER)
   - away_goals (INTEGER)
   - referee (TEXT)
   - season (INTEGER)
   - home_goals_ht (INTEGER)
   - away_goals_ht (INTEGER)
   - round (TEXT)
   - status (TEXT)

üî∏ Table : players
   - id (INTEGER)
   - name (TEXT)
   - position (TEXT)
   - age (INTEGER)
   - country_flag (TEXT)
   - team_id (INTEGER)
   - fixture_id (INTEGER)
   - firstname (TEXT)
   - lastname (TEXT)
   - country (TEXT)
   - photo (TEXT)
   - birth_date (TEXT)
   - birth_place (TEXT)
   - birth_country (TEXT)
   - height (TEXT)
   - weight (TEXT)
   - rating (TEXT)
   - injured (BOOLEAN)

üî∏ Table : player_stats
   - id (INTEGER)
   - fixture_id (INTEGER)
   - player_id (INTEGER)
   - team_id (INTEGER)
   - goals (INTEGER)
   - assists (INTEGER)
   - yellow_cards (INTEGER)
   - red_cards (INTEGER)
   - minutes (INTEGER)
   - shots_total (INTEGER)
   - shots_on_target (INTEGER)
   - penalty_scored (INTEGER)
   - penalty_missed (INTEGER)
   - xg (REAL)
   - xa (REAL)
   - season (TEXT)

üî∏ Table : sqlite_sequence
   - name ()
   - seq ()

üî∏ Table : leagues
   - id (INTEGER)
   - name (TEXT)
   - country (TEXT)
   - logo (TEXT)
   - flag (TEXT)

üî∏ Table : fixture_events
   - id (INTEGER)
   - fixture_id (INTEGER)
   - team_id (INTEGER)
   - player_id (INTEGER)
   - assist_id (INTEGER)
   - type (TEXT)
   - detail (TEXT)
   - comments (TEXT)
   - elapsed (INTEGER)
   - extra (INTEGER)
   - minute (INTEGER)

üî∏ Table : player_match_presence
   - fixture_id (INTEGER)
   - player_id (INTEGER)
   - team_id (INTEGER)
   - status (TEXT)

üìä FONCTIONNALIT√âS ACTUELLES
- Import complet des matchs avec fallback en cas de stats manquantes
- Affichage d√©taill√© par match avec stats joueur/√©quipe
- Filtres de performances (X1, MT, 2MT, DOM, EXT, H2H)
- Graphiques des performances (Chart.js)
- Tendances (pastilles vertes/rouges/grises)
- S√©ries de buts (1re mi-temps, global, encaiss√©s, etc.)
- Stats cumul√©es (LS5, LS10, LS20, H2H)

üß† PRIORIT√âS ACTUELLES
- Calcul des stats cumul√©es (LS5, 10, 20, DOM, EXT, H2H) au moment de l‚Äôimport
- Suppression des traitements redondants dans `data_access.py`
- Int√©gration de pourcentages de r√©ussite dans les listes de joueurs
- Refactorisation front (HTML + CSS) pour am√©liorer lisibilit√© et UX
- S√©paration claire entre stats g√©n√©rales, mi-temps, buteurs, etc.

üß© FONCTIONNALIT√âS √Ä VENIR
- Fiches comparatives entre √©quipes
- M√©t√©o (plus tard)
- Authentification & abonnement
- Caching des appels API
- Import historique sur 10 saisons
- Migration PostgreSQL
- Responsive mobile complet

üé® CHARTE VISUELLE
- Couleur fond principal : #2E3244
- Couleur secondaire : #516079
- Accent (orange) : #F1895C
- Neutres : #C5C6C6 / #FFFFFF
- Style g√©n√©ral : minimaliste, visuel clair, focus sur la donn√©e
- Ic√¥nes SVG pour les √©v√©nements de match (cartons, buts, penalty‚Ä¶)

üß© NOTES SUPPL√âMENTAIRES
- Tous les filtres (X1, X2, MT, 2MT, H2H...) sont centralis√©s dans `get_player_match_stats()`
- Le syst√®me de fallback via `fixture_events` est actif quand `player_stats` est incomplet
- Les fichiers JS sont segment√©s par fonction (chart, panel, etc.)

# ============================
# Fin du fichier config_project.txt
# ============================
